; SMT-LIBv2 description generated by Yosys 0.36+3 (git sha1 a53032104, clang 10.0.0-4ubuntu1 -fPIC -Os)
; yosys-smt2-module topmsb_1
(declare-sort |topmsb_1_s| 0)
(declare-fun |topmsb_1_is| (|topmsb_1_s|) Bool)
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:88:sample_data$\\y#sampled$31"], "smtname": 0, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |topmsb_1#0| (|topmsb_1_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:88:sample_data$\y#sampled$31
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:88:sample_data$\\w#sampled$33"], "smtname": 1, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |topmsb_1#1| (|topmsb_1_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:88:sample_data$\w#sampled$33
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:74:sample_control_edge$\\clk#sampled$35"], "smtname": 2, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |topmsb_1#2| (|topmsb_1_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:74:sample_control_edge$\clk#sampled$35
(declare-fun |topmsb_1#3| (|topmsb_1_s|) (_ BitVec 1)) ; \clk
(define-fun |topmsb_1#4| ((state |topmsb_1_s|)) Bool (= (concat (|topmsb_1#2| state) (|topmsb_1#3| state)) #b01)) ; $auto$rtlil.cc:2501:Eqx$38
(define-fun |topmsb_1#5| ((state |topmsb_1_s|)) (_ BitVec 1) (ite (|topmsb_1#4| state) (|topmsb_1#1| state) (|topmsb_1#0| state))) ; \y
; yosys-smt2-output y 1
; yosys-smt2-wire y 1
(define-fun |topmsb_1_n y| ((state |topmsb_1_s|)) Bool (= ((_ extract 0 0) (|topmsb_1#5| state)) #b1))
(declare-fun |topmsb_1#6| (|topmsb_1_s|) Bool) ; \w
; yosys-smt2-input w 1
; yosys-smt2-wire w 1
; yosys-smt2-witness {"offset": 0, "path": ["\\w"], "smtname": "w", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |topmsb_1_n w| ((state |topmsb_1_s|)) Bool (|topmsb_1#6| state))
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |topmsb_1_n clk| ((state |topmsb_1_s|)) Bool (= ((_ extract 0 0) (|topmsb_1#3| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:88:sample_data$/y#sampled$31 1
(define-fun |topmsb_1_n $auto$clk2fflogic.cc:88:sample_data$/y#sampled$31| ((state |topmsb_1_s|)) Bool (= ((_ extract 0 0) (|topmsb_1#0| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:88:sample_data$/w#sampled$33 1
(define-fun |topmsb_1_n $auto$clk2fflogic.cc:88:sample_data$/w#sampled$33| ((state |topmsb_1_s|)) Bool (= ((_ extract 0 0) (|topmsb_1#1| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:74:sample_control_edge$/clk#sampled$35 1
(define-fun |topmsb_1_n $auto$clk2fflogic.cc:74:sample_control_edge$/clk#sampled$35| ((state |topmsb_1_s|)) Bool (= ((_ extract 0 0) (|topmsb_1#2| state)) #b1))
(define-fun |topmsb_1_a| ((state |topmsb_1_s|)) Bool true)
(define-fun |topmsb_1_u| ((state |topmsb_1_s|)) Bool true)
(define-fun |topmsb_1_i| ((state |topmsb_1_s|)) Bool (and
  (= (= ((_ extract 0 0) (|topmsb_1#0| state)) #b1) false) ; $auto$clk2fflogic.cc:88:sample_data$/y#sampled$31
  (= (= ((_ extract 0 0) (|topmsb_1#1| state)) #b1) false) ; $auto$clk2fflogic.cc:88:sample_data$/w#sampled$33
  (= (= ((_ extract 0 0) (|topmsb_1#2| state)) #b1) true) ; $auto$clk2fflogic.cc:74:sample_control_edge$/clk#sampled$35
))
(define-fun |topmsb_1_h| ((state |topmsb_1_s|)) Bool true)
(define-fun |topmsb_1_t| ((state |topmsb_1_s|) (next_state |topmsb_1_s|)) Bool (and
  (= (|topmsb_1#3| state) (|topmsb_1#2| next_state)) ; $auto$clk2fflogic.cc:79:sample_control_edge$36 $auto$clk2fflogic.cc:74:sample_control_edge$\clk#sampled$35
  (= (ite (|topmsb_1#6| state) #b1 #b0) (|topmsb_1#1| next_state)) ; $auto$clk2fflogic.cc:95:sample_data$34 $auto$clk2fflogic.cc:88:sample_data$\w#sampled$33
  (= (|topmsb_1#5| state) (|topmsb_1#0| next_state)) ; $auto$clk2fflogic.cc:95:sample_data$32 $auto$clk2fflogic.cc:88:sample_data$\y#sampled$31
)) ; end of module topmsb_1
; yosys-smt2-module topmsb_2
(declare-sort |topmsb_2_s| 0)
(declare-fun |topmsb_2_is| (|topmsb_2_s|) Bool)
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:88:sample_data$\\y#sampled$21"], "smtname": 0, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |topmsb_2#0| (|topmsb_2_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:88:sample_data$\y#sampled$21
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:88:sample_data$\\w#sampled$23"], "smtname": 1, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |topmsb_2#1| (|topmsb_2_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:88:sample_data$\w#sampled$23
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:74:sample_control_edge$\\clk#sampled$25"], "smtname": 2, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |topmsb_2#2| (|topmsb_2_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:74:sample_control_edge$\clk#sampled$25
(declare-fun |topmsb_2#3| (|topmsb_2_s|) (_ BitVec 1)) ; \clk
(define-fun |topmsb_2#4| ((state |topmsb_2_s|)) Bool (= (concat (|topmsb_2#2| state) (|topmsb_2#3| state)) #b01)) ; $auto$rtlil.cc:2501:Eqx$28
(define-fun |topmsb_2#5| ((state |topmsb_2_s|)) (_ BitVec 1) (ite (|topmsb_2#4| state) (|topmsb_2#1| state) (|topmsb_2#0| state))) ; \y
; yosys-smt2-output y 1
; yosys-smt2-wire y 1
(define-fun |topmsb_2_n y| ((state |topmsb_2_s|)) Bool (= ((_ extract 0 0) (|topmsb_2#5| state)) #b1))
(declare-fun |topmsb_2#6| (|topmsb_2_s|) Bool) ; \w
; yosys-smt2-input w 1
; yosys-smt2-wire w 1
; yosys-smt2-witness {"offset": 0, "path": ["\\w"], "smtname": "w", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |topmsb_2_n w| ((state |topmsb_2_s|)) Bool (|topmsb_2#6| state))
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |topmsb_2_n clk| ((state |topmsb_2_s|)) Bool (= ((_ extract 0 0) (|topmsb_2#3| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:88:sample_data$/y#sampled$21 1
(define-fun |topmsb_2_n $auto$clk2fflogic.cc:88:sample_data$/y#sampled$21| ((state |topmsb_2_s|)) Bool (= ((_ extract 0 0) (|topmsb_2#0| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:88:sample_data$/w#sampled$23 1
(define-fun |topmsb_2_n $auto$clk2fflogic.cc:88:sample_data$/w#sampled$23| ((state |topmsb_2_s|)) Bool (= ((_ extract 0 0) (|topmsb_2#1| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:74:sample_control_edge$/clk#sampled$25 1
(define-fun |topmsb_2_n $auto$clk2fflogic.cc:74:sample_control_edge$/clk#sampled$25| ((state |topmsb_2_s|)) Bool (= ((_ extract 0 0) (|topmsb_2#2| state)) #b1))
(define-fun |topmsb_2_a| ((state |topmsb_2_s|)) Bool true)
(define-fun |topmsb_2_u| ((state |topmsb_2_s|)) Bool true)
(define-fun |topmsb_2_i| ((state |topmsb_2_s|)) Bool (and
  (= (= ((_ extract 0 0) (|topmsb_2#0| state)) #b1) false) ; $auto$clk2fflogic.cc:88:sample_data$/y#sampled$21
  (= (= ((_ extract 0 0) (|topmsb_2#1| state)) #b1) false) ; $auto$clk2fflogic.cc:88:sample_data$/w#sampled$23
  (= (= ((_ extract 0 0) (|topmsb_2#2| state)) #b1) true) ; $auto$clk2fflogic.cc:74:sample_control_edge$/clk#sampled$25
))
(define-fun |topmsb_2_h| ((state |topmsb_2_s|)) Bool true)
(define-fun |topmsb_2_t| ((state |topmsb_2_s|) (next_state |topmsb_2_s|)) Bool (and
  (= (|topmsb_2#3| state) (|topmsb_2#2| next_state)) ; $auto$clk2fflogic.cc:79:sample_control_edge$26 $auto$clk2fflogic.cc:74:sample_control_edge$\clk#sampled$25
  (= (ite (|topmsb_2#6| state) #b1 #b0) (|topmsb_2#1| next_state)) ; $auto$clk2fflogic.cc:95:sample_data$24 $auto$clk2fflogic.cc:88:sample_data$\w#sampled$23
  (= (|topmsb_2#5| state) (|topmsb_2#0| next_state)) ; $auto$clk2fflogic.cc:95:sample_data$22 $auto$clk2fflogic.cc:88:sample_data$\y#sampled$21
)) ; end of module topmsb_2
; yosys-smt2-module topmsb
(declare-sort |topmsb_s| 0)
(declare-fun |topmsb_is| (|topmsb_s|) Bool)
; yosys-smt2-cell topmsb_2 topmsb_2
; yosys-smt2-witness {"path": ["\\topmsb_2"], "smtname": "topmsb_2", "type": "cell"}
(declare-fun |topmsb#0| (|topmsb_s|) Bool) ; \y_2
(declare-fun |topmsb_h topmsb_2| (|topmsb_s|) |topmsb_2_s|)
; yosys-smt2-output y_2 1
; yosys-smt2-wire y_2 1
(define-fun |topmsb_n y_2| ((state |topmsb_s|)) Bool (|topmsb#0| state))
; yosys-smt2-cell topmsb_1 topmsb_1
; yosys-smt2-witness {"path": ["\\topmsb_1"], "smtname": "topmsb_1", "type": "cell"}
(declare-fun |topmsb#1| (|topmsb_s|) Bool) ; \y_1
(declare-fun |topmsb_h topmsb_1| (|topmsb_s|) |topmsb_1_s|)
; yosys-smt2-output y_1 1
; yosys-smt2-wire y_1 1
(define-fun |topmsb_n y_1| ((state |topmsb_s|)) Bool (|topmsb#1| state))
(declare-fun |topmsb#2| (|topmsb_s|) (_ BitVec 3)) ; \w
; yosys-smt2-input w 3
; yosys-smt2-wire w 3
; yosys-smt2-witness {"offset": 0, "path": ["\\w"], "smtname": "w", "smtoffset": 0, "type": "input", "width": 3}
(define-fun |topmsb_n w| ((state |topmsb_s|)) (_ BitVec 3) (|topmsb#2| state))
(declare-fun |topmsb#3| (|topmsb_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |topmsb_n clk| ((state |topmsb_s|)) Bool (|topmsb#3| state))
; yosys-smt2-anyinit topmsb#4 1 $auto$clk2fflogic.cc:95:sample_data$52
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_auto_clk2fflogic_cc_95_sample_data_52"], "smtname": 4, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |topmsb#4| (|topmsb_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:88:sample_data$$formal$topmsb.v:9$2_CHECK#sampled$51
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:88:sample_data$$0$formal$topmsb.v:9$2_CHECK[0:0]$4#sampled$53"], "smtname": 5, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |topmsb#5| (|topmsb_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:88:sample_data$$0$formal$topmsb.v:9$2_CHECK[0:0]$4#sampled$53
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:74:sample_control_edge$\\clk#sampled$45"], "smtname": 6, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |topmsb#6| (|topmsb_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:74:sample_control_edge$\clk#sampled$45
(define-fun |topmsb#7| ((state |topmsb_s|)) Bool (= (concat (|topmsb#6| state) (ite (|topmsb#3| state) #b1 #b0)) #b01)) ; $auto$rtlil.cc:2501:Eqx$48
(define-fun |topmsb#8| ((state |topmsb_s|)) (_ BitVec 1) (ite (|topmsb#7| state) (|topmsb#5| state) (|topmsb#4| state))) ; \_witness_.anyinit_auto_clk2fflogic_cc_95_sample_data_52
; yosys-smt2-wire _witness_.anyinit_auto_clk2fflogic_cc_95_sample_data_52 1
(define-fun |topmsb_n _witness_.anyinit_auto_clk2fflogic_cc_95_sample_data_52| ((state |topmsb_s|)) Bool (= ((_ extract 0 0) (|topmsb#8| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:88:sample_data$$formal$topmsb.v:9$2_EN#sampled$41"], "smtname": 9, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |topmsb#9| (|topmsb_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:88:sample_data$$formal$topmsb.v:9$2_EN#sampled$41
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:88:sample_data$1'1#sampled$43"], "smtname": 10, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |topmsb#10| (|topmsb_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:88:sample_data$1'1#sampled$43
(define-fun |topmsb#11| ((state |topmsb_s|)) (_ BitVec 1) (ite (|topmsb#7| state) (|topmsb#10| state) (|topmsb#9| state))) ; $formal$topmsb.v:9$2_EN
; yosys-smt2-wire $formal$topmsb.v:9$2_EN 1
(define-fun |topmsb_n $formal$topmsb.v:9$2_EN| ((state |topmsb_s|)) Bool (= ((_ extract 0 0) (|topmsb#11| state)) #b1))
; yosys-smt2-wire $formal$topmsb.v:9$2_CHECK 1
(define-fun |topmsb_n $formal$topmsb.v:9$2_CHECK| ((state |topmsb_s|)) Bool (= ((_ extract 0 0) (|topmsb#8| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:88:sample_data$1'1#sampled$43 1
(define-fun |topmsb_n $auto$clk2fflogic.cc:88:sample_data$1'1#sampled$43| ((state |topmsb_s|)) Bool (= ((_ extract 0 0) (|topmsb#10| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:88:sample_data$$formal$topmsb.v:9$2_EN#sampled$41 1
(define-fun |topmsb_n $auto$clk2fflogic.cc:88:sample_data$$formal$topmsb.v:9$2_EN#sampled$41| ((state |topmsb_s|)) Bool (= ((_ extract 0 0) (|topmsb#9| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:88:sample_data$$formal$topmsb.v:9$2_CHECK#sampled$51 1
(define-fun |topmsb_n $auto$clk2fflogic.cc:88:sample_data$$formal$topmsb.v:9$2_CHECK#sampled$51| ((state |topmsb_s|)) Bool (= ((_ extract 0 0) (|topmsb#4| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:88:sample_data$$0$formal$topmsb.v:9$2_CHECK[0:0]$4#sampled$53 1
(define-fun |topmsb_n $auto$clk2fflogic.cc:88:sample_data$$0$formal$topmsb.v:9$2_CHECK[0:0]$4#sampled$53| ((state |topmsb_s|)) Bool (= ((_ extract 0 0) (|topmsb#5| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:74:sample_control_edge$/clk#sampled$45 1
(define-fun |topmsb_n $auto$clk2fflogic.cc:74:sample_control_edge$/clk#sampled$45| ((state |topmsb_s|)) Bool (= ((_ extract 0 0) (|topmsb#6| state)) #b1))
; yosys-smt2-assert 0 $assert$topmsb.v:9$7 topmsb.v:9.25-10.28
(define-fun |topmsb_a 0| ((state |topmsb_s|)) Bool (or (= ((_ extract 0 0) (|topmsb#8| state)) #b1) (not (= ((_ extract 0 0) (|topmsb#11| state)) #b1)))) ; $assert$topmsb.v:9$7
(define-fun |topmsb#12| ((state |topmsb_s|)) Bool (= (ite (|topmsb#1| state) #b1 #b0) (ite (|topmsb#0| state) #b1 #b0))) ; $0$formal$topmsb.v:9$2_CHECK[0:0]$4
(define-fun |topmsb_a| ((state |topmsb_s|)) Bool (and
  (|topmsb_a 0| state)
  (|topmsb_1_a| (|topmsb_h topmsb_1| state))
  (|topmsb_2_a| (|topmsb_h topmsb_2| state))
))
(define-fun |topmsb_u| ((state |topmsb_s|)) Bool (and
  (|topmsb_1_u| (|topmsb_h topmsb_1| state))
  (|topmsb_2_u| (|topmsb_h topmsb_2| state))
))
(define-fun |topmsb_i| ((state |topmsb_s|)) Bool (and
  (= (= ((_ extract 0 0) (|topmsb#10| state)) #b1) false) ; $auto$clk2fflogic.cc:88:sample_data$1'1#sampled$43
  (= (= ((_ extract 0 0) (|topmsb#9| state)) #b1) false) ; $auto$clk2fflogic.cc:88:sample_data$$formal$topmsb.v:9$2_EN#sampled$41
  (= (= ((_ extract 0 0) (|topmsb#5| state)) #b1) false) ; $auto$clk2fflogic.cc:88:sample_data$$0$formal$topmsb.v:9$2_CHECK[0:0]$4#sampled$53
  (= (= ((_ extract 0 0) (|topmsb#6| state)) #b1) true) ; $auto$clk2fflogic.cc:74:sample_control_edge$/clk#sampled$45
  (|topmsb_1_i| (|topmsb_h topmsb_1| state))
  (|topmsb_2_i| (|topmsb_h topmsb_2| state))
))
(define-fun |topmsb_h| ((state |topmsb_s|)) Bool (and
  (= (|topmsb_is| state) (|topmsb_1_is| (|topmsb_h topmsb_1| state)))
  (= (|topmsb#1| state) (|topmsb_1_n y| (|topmsb_h topmsb_1| state))) ; topmsb_1.y
  (= (= ((_ extract 0 0) (|topmsb#2| state)) #b1) (|topmsb_1_n w| (|topmsb_h topmsb_1| state))) ; topmsb_1.w
  (= (|topmsb_is| state) (|topmsb_2_is| (|topmsb_h topmsb_2| state)))
  (= (|topmsb#0| state) (|topmsb_2_n y| (|topmsb_h topmsb_2| state))) ; topmsb_2.y
  (= (= ((_ extract 0 0) (|topmsb#2| state)) #b1) (|topmsb_2_n w| (|topmsb_h topmsb_2| state))) ; topmsb_2.w
  (|topmsb_1_h| (|topmsb_h topmsb_1| state))
  (|topmsb_2_h| (|topmsb_h topmsb_2| state))
))
(define-fun |topmsb_t| ((state |topmsb_s|) (next_state |topmsb_s|)) Bool (and
  (= #b1 (|topmsb#10| next_state)) ; $auto$clk2fflogic.cc:95:sample_data$44 $auto$clk2fflogic.cc:88:sample_data$1'1#sampled$43
  (= (|topmsb#11| state) (|topmsb#9| next_state)) ; $auto$clk2fflogic.cc:95:sample_data$42 $auto$clk2fflogic.cc:88:sample_data$$formal$topmsb.v:9$2_EN#sampled$41
  (= (ite (|topmsb#3| state) #b1 #b0) (|topmsb#6| next_state)) ; $auto$clk2fflogic.cc:79:sample_control_edge$46 $auto$clk2fflogic.cc:74:sample_control_edge$\clk#sampled$45
  (= (ite (|topmsb#12| state) #b1 #b0) (|topmsb#5| next_state)) ; $auto$clk2fflogic.cc:95:sample_data$54 $auto$clk2fflogic.cc:88:sample_data$$0$formal$topmsb.v:9$2_CHECK[0:0]$4#sampled$53
  (= (|topmsb#8| state) (|topmsb#4| next_state)) ; $auto$clk2fflogic.cc:95:sample_data$52 $auto$clk2fflogic.cc:88:sample_data$$formal$topmsb.v:9$2_CHECK#sampled$51
  (|topmsb_1_t| (|topmsb_h topmsb_1| state) (|topmsb_h topmsb_1| next_state))
  (|topmsb_2_t| (|topmsb_h topmsb_2| state) (|topmsb_h topmsb_2| next_state))
)) ; end of module topmsb
; yosys-smt2-topmod topmsb
; end of yosys output
