
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.36+3 (git sha1 a53032104, clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Executing script file `design_smt2.ys' --

1. Executing RTLIL frontend.
Input filename: design_prep.il

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Analyzing design hierarchy..
Top module:  \proofcombgood
Used module:     \goodbranch
Used module:     \bug_eval
Used module:         \topmsb_1
Used module:         \top_1
Used module:         \badbranch

2.2. Analyzing design hierarchy..
Top module:  \proofcombgood
Used module:     \goodbranch
Used module:     \bug_eval
Used module:         \topmsb_1
Used module:         \top_1
Used module:         \badbranch
Removed 0 unused modules.
Module proofcombgood directly or indirectly contains formal properties -> setting "keep" attribute.

3. Executing FORMALFF pass.

4. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

5. Printing statistics.

=== topmsb_1 ===

   Number of wires:                  7
   Number of wire bits:              7
   Number of public wires:           3
   Number of public wire bits:       3
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  5
     $eqx                            1
     $ff                             3
     $mux                            1

=== top_1 ===

   Number of wires:                  3
   Number of wire bits:              5
   Number of public wires:           2
   Number of public wire bits:       4
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $not                            1
     $or                             1

=== proofcombgood ===

   Number of wires:                 46
   Number of wire bits:             66
   Number of public wires:          18
   Number of public wire bits:      38
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 36
     $anyinit                        2
     $anyseq                         4
     $assert                         1
     $eq                             4
     $eqx                            1
     $ff                             5
     $logic_and                      4
     $mux                           13
     bug_eval                        1
     goodbranch                      1

=== goodbranch ===

   Number of wires:                  3
   Number of wire bits:             13
   Number of public wires:           3
   Number of public wire bits:      13
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $add                            1

=== bug_eval ===

   Number of wires:                 16
   Number of wire bits:             42
   Number of public wires:          14
   Number of public wire bits:      40
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  7
     $logic_and                      1
     $mux                            1
     $not                            1
     badbranch                       1
     goodbranch                      1
     top_1                           1
     topmsb_1                        1

=== badbranch ===

   Number of wires:                  3
   Number of wire bits:             13
   Number of public wires:           3
   Number of public wire bits:      13
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $add                            1

=== design hierarchy ===

   proofcombgood                     1
     bug_eval                        1
       badbranch                     1
       goodbranch                    1
       top_1                         1
       topmsb_1                      1
     goodbranch                      1

   Number of wires:                 81
   Number of wire bits:            159
   Number of public wires:          46
   Number of public wire bits:     124
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 47
     $add                            3
     $anyinit                        2
     $anyseq                         4
     $assert                         1
     $eq                             4
     $eqx                            2
     $ff                             8
     $logic_and                      5
     $mux                           15
     $not                            2
     $or                             1

6. Executing SMT2 backend.

6.1. Executing BMUXMAP pass.

6.2. Executing DEMUXMAP pass.
Creating SMT-LIBv2 representation of module badbranch.
Creating SMT-LIBv2 representation of module goodbranch.
Creating SMT-LIBv2 representation of module top_1.
Creating SMT-LIBv2 representation of module topmsb_1.
Creating SMT-LIBv2 representation of module bug_eval.
Creating SMT-LIBv2 representation of module proofcombgood.

End of script. Logfile hash: a51e414091, CPU: user 0.00s system 0.02s, MEM: 11.36 MB peak
Yosys 0.36+3 (git sha1 a53032104, clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 60% 2x write_smt2 (0 sec), 12% 2x read_ilang (0 sec), ...
