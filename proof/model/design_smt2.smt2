; SMT-LIBv2 description generated by Yosys 0.36+3 (git sha1 a53032104, clang 10.0.0-4ubuntu1 -fPIC -Os)
; yosys-smt2-module top_1
(declare-sort |top_1_s| 0)
(declare-fun |top_1_is| (|top_1_s|) Bool)
(declare-fun |top_1#0| (|top_1_s|) (_ BitVec 1)) ; \w [1]
(declare-fun |top_1#1| (|top_1_s|) (_ BitVec 1)) ; \w [0]
(define-fun |top_1#2| ((state |top_1_s|)) (_ BitVec 1) (bvor (|top_1#0| state) (|top_1#1| state))) ; $or$syn_yosys.v:8$11_Y
(define-fun |top_1#3| ((state |top_1_s|)) (_ BitVec 1) (bvnot (|top_1#2| state))) ; \y
; yosys-smt2-output y 1
; yosys-smt2-wire y 1
(define-fun |top_1_n y| ((state |top_1_s|)) Bool (= ((_ extract 0 0) (|top_1#3| state)) #b1))
(declare-fun |top_1#4| (|top_1_s|) (_ BitVec 1)) ; \w [2]
; yosys-smt2-input w 3
; yosys-smt2-wire w 3
; yosys-smt2-witness {"offset": 0, "path": ["\\w"], "smtname": "w", "smtoffset": 0, "type": "input", "width": 3}
(define-fun |top_1_n w| ((state |top_1_s|)) (_ BitVec 3) (concat (|top_1#4| state) (concat (|top_1#0| state) (|top_1#1| state))))
(define-fun |top_1_a| ((state |top_1_s|)) Bool true)
(define-fun |top_1_u| ((state |top_1_s|)) Bool true)
(define-fun |top_1_i| ((state |top_1_s|)) Bool true)
(define-fun |top_1_h| ((state |top_1_s|)) Bool true)
(define-fun |top_1_t| ((state |top_1_s|) (next_state |top_1_s|)) Bool true) ; end of module top_1
; yosys-smt2-module top_2
(declare-sort |top_2_s| 0)
(declare-fun |top_2_is| (|top_2_s|) Bool)
(declare-fun |top_2#0| (|top_2_s|) (_ BitVec 2)) ; \w [1:0]
(define-fun |top_2#1| ((state |top_2_s|)) (_ BitVec 2) (bvmul (|top_2#0| state) #b11)) ; $mul$syn_identity.v:4$9_Y [2:1]
(define-fun |top_2#2| ((state |top_2_s|)) (_ BitVec 1) ((_ extract 0 0) (bvlshr #b001 (concat (|top_2#1| state) #b0)))) ; \y
; yosys-smt2-output y 1
; yosys-smt2-wire y 1
(define-fun |top_2_n y| ((state |top_2_s|)) Bool (= ((_ extract 0 0) (|top_2#2| state)) #b1))
(declare-fun |top_2#3| (|top_2_s|) (_ BitVec 1)) ; \w [2]
; yosys-smt2-input w 3
; yosys-smt2-wire w 3
; yosys-smt2-witness {"offset": 0, "path": ["\\w"], "smtname": "w", "smtoffset": 0, "type": "input", "width": 3}
(define-fun |top_2_n w| ((state |top_2_s|)) (_ BitVec 3) (concat (|top_2#3| state) (|top_2#0| state)))
(define-fun |top_2_a| ((state |top_2_s|)) Bool true)
(define-fun |top_2_u| ((state |top_2_s|)) Bool true)
(define-fun |top_2_i| ((state |top_2_s|)) Bool true)
(define-fun |top_2_h| ((state |top_2_s|)) Bool true)
(define-fun |top_2_t| ((state |top_2_s|) (next_state |top_2_s|)) Bool true) ; end of module top_2
; yosys-smt2-module top
(declare-sort |top_s| 0)
(declare-fun |top_is| (|top_s|) Bool)
; yosys-smt2-cell top_2 top_2
; yosys-smt2-witness {"path": ["\\top_2"], "smtname": "top_2", "type": "cell"}
(declare-fun |top#0| (|top_s|) Bool) ; \y_2
(declare-fun |top_h top_2| (|top_s|) |top_2_s|)
; yosys-smt2-output y_2 1
; yosys-smt2-wire y_2 1
(define-fun |top_n y_2| ((state |top_s|)) Bool (|top#0| state))
; yosys-smt2-cell top_1 top_1
; yosys-smt2-witness {"path": ["\\top_1"], "smtname": "top_1", "type": "cell"}
(declare-fun |top#1| (|top_s|) Bool) ; \y_1
(declare-fun |top_h top_1| (|top_s|) |top_1_s|)
; yosys-smt2-output y_1 1
; yosys-smt2-wire y_1 1
(define-fun |top_n y_1| ((state |top_s|)) Bool (|top#1| state))
(declare-fun |top#2| (|top_s|) (_ BitVec 3)) ; \w
; yosys-smt2-input w 3
; yosys-smt2-wire w 3
; yosys-smt2-witness {"offset": 0, "path": ["\\w"], "smtname": "w", "smtoffset": 0, "type": "input", "width": 3}
(define-fun |top_n w| ((state |top_s|)) (_ BitVec 3) (|top#2| state))
(declare-fun |top#3| (|top_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |top_n clk| ((state |top_s|)) Bool (|top#3| state))
; yosys-smt2-anyinit top#4 1 $auto$clk2fflogic.cc:95:sample_data$26
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_auto_clk2fflogic_cc_95_sample_data_26"], "smtname": 4, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |top#4| (|top_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:88:sample_data$$formal$top.v:9$1_CHECK#sampled$25
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:88:sample_data$$0$formal$top.v:9$1_CHECK[0:0]$3#sampled$27"], "smtname": 5, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |top#5| (|top_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:88:sample_data$$0$formal$top.v:9$1_CHECK[0:0]$3#sampled$27
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:74:sample_control_edge$\\clk#sampled$19"], "smtname": 6, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |top#6| (|top_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:74:sample_control_edge$\clk#sampled$19
(define-fun |top#7| ((state |top_s|)) Bool (= (concat (|top#6| state) (ite (|top#3| state) #b1 #b0)) #b01)) ; $auto$rtlil.cc:2501:Eqx$22
(define-fun |top#8| ((state |top_s|)) (_ BitVec 1) (ite (|top#7| state) (|top#5| state) (|top#4| state))) ; \_witness_.anyinit_auto_clk2fflogic_cc_95_sample_data_26
; yosys-smt2-wire _witness_.anyinit_auto_clk2fflogic_cc_95_sample_data_26 1
(define-fun |top_n _witness_.anyinit_auto_clk2fflogic_cc_95_sample_data_26| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#8| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:88:sample_data$$formal$top.v:9$1_EN#sampled$15"], "smtname": 9, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |top#9| (|top_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:88:sample_data$$formal$top.v:9$1_EN#sampled$15
; yosys-smt2-witness {"offset": 0, "path": ["$auto$clk2fflogic.cc:88:sample_data$1'1#sampled$17"], "smtname": 10, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |top#10| (|top_s|) (_ BitVec 1)) ; $auto$clk2fflogic.cc:88:sample_data$1'1#sampled$17
(define-fun |top#11| ((state |top_s|)) (_ BitVec 1) (ite (|top#7| state) (|top#10| state) (|top#9| state))) ; $formal$top.v:9$1_EN
; yosys-smt2-wire $formal$top.v:9$1_EN 1
(define-fun |top_n $formal$top.v:9$1_EN| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#11| state)) #b1))
; yosys-smt2-wire $formal$top.v:9$1_CHECK 1
(define-fun |top_n $formal$top.v:9$1_CHECK| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#8| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:88:sample_data$1'1#sampled$17 1
(define-fun |top_n $auto$clk2fflogic.cc:88:sample_data$1'1#sampled$17| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#10| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:88:sample_data$$formal$top.v:9$1_EN#sampled$15 1
(define-fun |top_n $auto$clk2fflogic.cc:88:sample_data$$formal$top.v:9$1_EN#sampled$15| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#9| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:88:sample_data$$formal$top.v:9$1_CHECK#sampled$25 1
(define-fun |top_n $auto$clk2fflogic.cc:88:sample_data$$formal$top.v:9$1_CHECK#sampled$25| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#4| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:88:sample_data$$0$formal$top.v:9$1_CHECK[0:0]$3#sampled$27 1
(define-fun |top_n $auto$clk2fflogic.cc:88:sample_data$$0$formal$top.v:9$1_CHECK[0:0]$3#sampled$27| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#5| state)) #b1))
; yosys-smt2-register $auto$clk2fflogic.cc:74:sample_control_edge$/clk#sampled$19 1
(define-fun |top_n $auto$clk2fflogic.cc:74:sample_control_edge$/clk#sampled$19| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#6| state)) #b1))
; yosys-smt2-assert 0 $assert$top.v:9$6 top.v:9.25-10.28
(define-fun |top_a 0| ((state |top_s|)) Bool (or (= ((_ extract 0 0) (|top#8| state)) #b1) (not (= ((_ extract 0 0) (|top#11| state)) #b1)))) ; $assert$top.v:9$6
(define-fun |top#12| ((state |top_s|)) Bool (= (ite (|top#1| state) #b1 #b0) (ite (|top#0| state) #b1 #b0))) ; $0$formal$top.v:9$1_CHECK[0:0]$3
(define-fun |top_a| ((state |top_s|)) Bool (and
  (|top_a 0| state)
  (|top_1_a| (|top_h top_1| state))
  (|top_2_a| (|top_h top_2| state))
))
(define-fun |top_u| ((state |top_s|)) Bool (and
  (|top_1_u| (|top_h top_1| state))
  (|top_2_u| (|top_h top_2| state))
))
(define-fun |top_i| ((state |top_s|)) Bool (and
  (= (= ((_ extract 0 0) (|top#10| state)) #b1) false) ; $auto$clk2fflogic.cc:88:sample_data$1'1#sampled$17
  (= (= ((_ extract 0 0) (|top#9| state)) #b1) false) ; $auto$clk2fflogic.cc:88:sample_data$$formal$top.v:9$1_EN#sampled$15
  (= (= ((_ extract 0 0) (|top#5| state)) #b1) false) ; $auto$clk2fflogic.cc:88:sample_data$$0$formal$top.v:9$1_CHECK[0:0]$3#sampled$27
  (= (= ((_ extract 0 0) (|top#6| state)) #b1) true) ; $auto$clk2fflogic.cc:74:sample_control_edge$/clk#sampled$19
  (|top_1_i| (|top_h top_1| state))
  (|top_2_i| (|top_h top_2| state))
))
(define-fun |top_h| ((state |top_s|)) Bool (and
  (= (|top_is| state) (|top_1_is| (|top_h top_1| state)))
  (= (|top#1| state) (|top_1_n y| (|top_h top_1| state))) ; top_1.y
  (= (|top#2| state) (|top_1_n w| (|top_h top_1| state))) ; top_1.w
  (= (|top_is| state) (|top_2_is| (|top_h top_2| state)))
  (= (|top#0| state) (|top_2_n y| (|top_h top_2| state))) ; top_2.y
  (= (|top#2| state) (|top_2_n w| (|top_h top_2| state))) ; top_2.w
  (|top_1_h| (|top_h top_1| state))
  (|top_2_h| (|top_h top_2| state))
))
(define-fun |top_t| ((state |top_s|) (next_state |top_s|)) Bool (and
  (= #b1 (|top#10| next_state)) ; $auto$clk2fflogic.cc:95:sample_data$18 $auto$clk2fflogic.cc:88:sample_data$1'1#sampled$17
  (= (|top#11| state) (|top#9| next_state)) ; $auto$clk2fflogic.cc:95:sample_data$16 $auto$clk2fflogic.cc:88:sample_data$$formal$top.v:9$1_EN#sampled$15
  (= (ite (|top#3| state) #b1 #b0) (|top#6| next_state)) ; $auto$clk2fflogic.cc:79:sample_control_edge$20 $auto$clk2fflogic.cc:74:sample_control_edge$\clk#sampled$19
  (= (ite (|top#12| state) #b1 #b0) (|top#5| next_state)) ; $auto$clk2fflogic.cc:95:sample_data$28 $auto$clk2fflogic.cc:88:sample_data$$0$formal$top.v:9$1_CHECK[0:0]$3#sampled$27
  (= (|top#8| state) (|top#4| next_state)) ; $auto$clk2fflogic.cc:95:sample_data$26 $auto$clk2fflogic.cc:88:sample_data$$formal$top.v:9$1_CHECK#sampled$25
  (|top_1_t| (|top_h top_1| state) (|top_h top_1| next_state))
  (|top_2_t| (|top_h top_2| state) (|top_h top_2| next_state))
)) ; end of module top
; yosys-smt2-topmod top
; end of yosys output
